# Notes: this receipt is based on torchvision-feedstock: https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml

{% set name = "torchani" %}
{% set version = "2.2.1" %}
{% set torchani_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  git_url: https://github.com/yueyericardo/{{ name }}.git
  # git_rev: {{ version }}
  git_tag: conda

build:
  number: 0
  skip: true  # [win]
  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torchani_proc_type }}                                                  # [cuda_compiler_version == "None"]
  string: py{{ CONDA_PY }}cuda{{ cuda_compiler_version|replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torchani_proc_type }}  # [cuda_compiler_version != "None"]
  script:
    # - "{{ PYTHON }} -m pip install . -vvv --no-deps"
    - "{{ PYTHON }} -m pip install . -vvv --no-deps"                                    # [cuda_compiler_version == "None"]
    - "{{ PYTHON }} -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps"  # [cuda_compiler_version != "None"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}                 # [cuda_compiler_version != "None"]
    - sysroot_linux-64 ==2.17                # [linux64]
    # - python                                 # [build_platform != target_platform]
    # - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    # - numpy                                  # [build_platform != target_platform]
    # - pytorch =*={{ torchani_proc_type }}*   # [build_platform != target_platform]

  host:
    - python
    - pip
    - setuptools_scm
    # - setuptools
    - importlib_metadata
    # - lark-parser
    # - requests
    # - h5py
    # - cmake
    # - ninja
    - numpy
    - pytorch
    - pytorch-gpu {{ pytorch_version }}  # [cuda_compiler_version != "None"]
    - pytorch-cpu {{ pytorch_version }}  # [cuda_compiler_version == "None"]

  run:
    - python
    - pip
    - importlib_metadata
    - lark-parser
    - requests
    - h5py
    - numpy
    - torchvision >=0.10
    - pytorch
    - pytorch-gpu {{ pytorch_version }}  # [cuda_compiler_version != "None"]
    - pytorch-cpu {{ pytorch_version }}  # [cuda_compiler_version == "None"]

test:
  imports:
    - torchani
    - torchani.cuaev                     # [cuda_compiler_version != "None"]
  source_files:
    - tests/*
    - download.sh
    - dataset/*
  commands:
    - python -m pip install pytest pynvml pkbar ase parameterized  # [linux64]
    - sudo yum install wget unzip -y                               # [linux64]
    - ./download.sh                                                # [linux64]
    # cuaev test
    - python -m pytest -v -s tests/*.py                            # [linux64]

about:
  home: https://roitberg.chem.ufl.edu
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Accurate Neural Network Potential on PyTorch'

extra:
  recipe-maintainers:
    - hadim
    - yueyericardo
